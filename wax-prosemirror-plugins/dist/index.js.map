{"version":3,"file":"index.js","sources":["../src/trackChanges/helpers.js","../src/trackChanges/FindSelectedChanges.js","../src/trackChanges/TrackChangePlugin.js","../src/comments/CommentPlugin.js","../src/WaxSelectionPlugin.js","../src/highlightPlugin.js"],"sourcesContent":["import {Decoration, DecorationSet} from \"prosemirror-view\"\n\nimport {\n    key,\n    selectedInsertionSpec,\n    selectedDeletionSpec,\n    selectedChangeFormatSpec,\n    selectedChangeBlockSpec\n} from \"./TrackChangePlugin\"\n\nexport function getSelectedChanges(state) {\n    const {decos} = key.getState(state)\n\n    const insertion = decos.find(undefined, undefined, spec => spec === selectedInsertionSpec)[0],\n        deletion = decos.find(undefined, undefined, spec => spec === selectedDeletionSpec)[0],\n        format_change = decos.find(undefined, undefined, spec => spec === selectedChangeFormatSpec)[0],\n        block_change = decos.find(undefined, undefined, spec => spec === selectedChangeBlockSpec)[0]\n\n    return {insertion, deletion, format_change, block_change}\n}\n\nexport function setSelectedChanges(state, type, pos) {\n    const tr = state.tr,\n        node = tr.doc.nodeAt(pos),\n        mark = node.attrs.track ?\n            node.attrs.track.find(trackAttr => trackAttr.type===type) :\n            node.marks.find(mark => mark.type.name===type)\n    if (!mark) {\n        return\n    }\n    const selectedChange = node.isInline ? getFromToMark(tr.doc, pos, mark) : {from: pos, to: pos + node.nodeSize}\n    let decos = DecorationSet.empty, spec\n    if (type==='insertion') {\n        spec = selectedInsertionSpec\n    } else if (type==='deletion') {\n        spec = selectedDeletionSpec\n    } else if (type==='format_change') {\n        spec = selectedChangeFormatSpec\n    } else if (type==='block_change') {\n        spec = selectedChangeBlockSpec\n    }\n    const decoType = node.isInline ? Decoration.inline : Decoration.node\n    decos = decos.add(tr.doc, [decoType(selectedChange.from, selectedChange.to, {\n        class: `selected-${type}`\n    }, spec)])\n    return tr.setMeta(key, {decos}).setMeta('track', true)\n}\n\nexport function deactivateAllSelectedChanges(tr) {\n    const pluginState = {\n        decos: DecorationSet.empty\n    }\n    return tr.setMeta(key, pluginState).setMeta('track', true)\n}\n\n// From https://discuss.prosemirror.net/t/expanding-the-selection-to-the-active-mark/478/2 with some bugs fixed\nexport function getFromToMark(doc, pos, mark) {\n    const $pos = doc.resolve(pos), parent = $pos.parent\n    const start = parent.childAfter($pos.parentOffset)\n    if (!start.node) {\n        return null\n    }\n    let startIndex = $pos.index(), startPos = $pos.start() + start.offset\n    while (startIndex > 0 && mark.isInSet(parent.child(startIndex - 1).marks)) {\n        startPos -= parent.child(--startIndex).nodeSize\n    }\n    let endIndex = $pos.index() + 1, endPos = $pos.start() + start.offset + start.node.nodeSize\n    while (endIndex < parent.childCount && mark.isInSet(parent.child(endIndex).marks)) {\n        endPos += parent.child(endIndex++).nodeSize\n    }\n    return {from: startPos, to: endPos}\n}\n","import { getFromToMark } from './helpers';\n\nconst findSelectedChanges = state => {\n  const selection = state.selection,\n    selectedChanges = {\n      insertion: false,\n      deletion: false,\n      formatChange: false,\n    };\n  let insertionPos = false,\n    deletionPos = false,\n    formatChangePos = false,\n    insertionMark,\n    deletionMark,\n    formatChangeMark,\n    insertionSize,\n    deletionSize,\n    formatChangeSize;\n\n  if (selection.empty) {\n    const resolvedPos = state.doc.resolve(selection.from),\n      marks = resolvedPos.marks();\n    if (marks) {\n      insertionMark = marks.find(mark => mark.type.name === 'insertion' && !mark.attrs.approved);\n      if (insertionMark) {\n        insertionPos = selection.from;\n      }\n      deletionMark = marks.find(mark => mark.type.name === 'deletion');\n      if (deletionMark) {\n        deletionPos = selection.from;\n      }\n      formatChangeMark = marks.find(mark => mark.type.name === 'format_change');\n      if (formatChangeMark) {\n        formatChangePos = selection.from;\n      }\n    }\n  } else {\n    state.doc.nodesBetween(selection.from, selection.to, (node, pos) => {\n      if (pos < selection.from) {\n        return true;\n      }\n      if (!insertionMark) {\n        insertionMark = node.attrs.track\n          ? node.attrs.track.find(trackAttr => trackAttr.type === 'insertion')\n          : node.marks.find(mark => mark.type.name === 'insertion' && !mark.attrs.approved);\n        if (insertionMark) {\n          insertionPos = pos;\n          if (!node.isInline) {\n            insertionSize = node.nodeSize;\n          }\n        }\n      }\n      if (!deletionMark) {\n        deletionMark = node.attrs.track\n          ? node.attrs.track.find(trackAttr => trackAttr.type === 'deletion')\n          : node.marks.find(mark => mark.type.name === 'deletion');\n        if (deletionMark) {\n          deletionPos = pos;\n          if (!node.isInline) {\n            deletionSize = node.nodeSize;\n          }\n        }\n      }\n      if (!formatChangeMark) {\n        formatChangeMark = node.marks.find(mark => mark.type.name === 'format_change');\n        if (formatChangeMark) {\n          formatChangePos = pos;\n          if (!node.isInline) {\n            formatChangeSize = node.nodeSize;\n          }\n        }\n      }\n    });\n  }\n  if (insertionMark) {\n    selectedChanges.insertion = insertionSize\n      ? { from: insertionPos, to: insertionPos + insertionSize }\n      : getFromToMark(state.doc, insertionPos, insertionMark);\n  }\n\n  if (deletionMark) {\n    selectedChanges.deletion = deletionSize\n      ? { from: deletionPos, to: deletionPos + deletionSize }\n      : getFromToMark(state.doc, deletionPos, deletionMark);\n  }\n\n  if (formatChangeMark) {\n    selectedChanges.formatChange = formatChangeSize\n      ? { from: formatChangePos, to: formatChangePos + formatChangeSize }\n      : getFromToMark(state.doc, formatChangePos, formatChangeMark);\n  }\n  return selectedChanges;\n};\n\nexport { findSelectedChanges };\n","import { Plugin, PluginKey } from 'prosemirror-state';\nimport { Decoration, DecorationSet } from 'prosemirror-view';\n\nimport { findSelectedChanges } from './FindSelectedChanges';\nimport { deactivateAllSelectedChanges } from './helpers';\n\nexport const key = new PluginKey('track');\nexport const selectedInsertionSpec = {};\nexport const selectedDeletionSpec = {};\nexport const selectedChangeFormatSpec = {};\nexport const selectedChangeBlockSpec = {};\n\nexport default options => {\n  return new Plugin({\n    key,\n    state: {\n      init(config, state) {\n        const userIds = ['33'];\n        state.doc.descendants(node => {\n          if (node.attrs.track) {\n            node.attrs.track.forEach(track => {\n              if (!userIds.includes(track.user) && track.user !== 0) {\n                userIds.push(track.user);\n              }\n            });\n          } else {\n            node.marks.forEach(mark => {\n              if (\n                ['deletion', 'insertion', 'format_change'].includes(mark.type.name) &&\n                !userIds.includes(mark.attrs.user) &&\n                mark.attrs.user !== 0\n              ) {\n                userIds.push(mark.attrs.user);\n              }\n            });\n          }\n        });\n\n        return {\n          decos: DecorationSet.empty,\n        };\n      },\n      apply(tr, prev, oldState, state) {\n        const meta = tr.getMeta(key);\n        if (meta) {\n          // There has been an update, return values from meta instead\n          // of previous values\n          return meta;\n        }\n\n        let { decos } = this.getState(oldState);\n\n        if (tr.selectionSet) {\n          const { insertion, deletion, formatChange } = findSelectedChanges(state);\n          decos = DecorationSet.empty;\n          const decoType = tr.selection.node ? Decoration.node : Decoration.inline;\n          if (insertion) {\n            decos = decos.add(tr.doc, [\n              decoType(\n                insertion.from,\n                insertion.to,\n                {\n                  class: 'selected-insertion',\n                },\n                selectedInsertionSpec,\n              ),\n            ]);\n          }\n          if (deletion) {\n            decos = decos.add(tr.doc, [\n              decoType(\n                deletion.from,\n                deletion.to,\n                {\n                  class: 'selected-deletion',\n                },\n                selectedDeletionSpec,\n              ),\n            ]);\n          }\n          if (formatChange) {\n            decos = decos.add(tr.doc, [\n              decoType(\n                formatChange.from,\n                formatChange.to,\n                {\n                  class: 'selected-format-change',\n                },\n                selectedChangeFormatSpec,\n              ),\n            ]);\n          }\n        } else {\n          decos = decos.map(tr.mapping, tr.doc);\n        }\n        return {\n          decos,\n        };\n      },\n    },\n    props: {\n      decorations(state) {\n        const { decos } = this.getState(state);\n        return decos;\n      },\n      handleDOMEvents: {\n        focus: (view, _event) => {\n          view.dispatch(deactivateAllSelectedChanges(view.state.tr));\n        },\n      },\n    },\n  });\n};\n","import { minBy, maxBy, last } from 'lodash';\nimport { Plugin, PluginKey } from 'prosemirror-state';\nimport { Decoration, DecorationSet } from 'prosemirror-view';\nimport { DocumentHelpers } from 'wax-prosemirror-utilities';\n\nconst commentPlugin = new PluginKey('commentPlugin');\n\nconst getComment = state => {\n  const commentMark = state.schema.marks.comment;\n  const commentOnSelection = DocumentHelpers.findFragmentedMark(state, commentMark);\n\n  // Don't allow Active comment if selection is not collapsed\n  if (\n    state.selection.from !== state.selection.to &&\n    commentOnSelection &&\n    commentOnSelection.attrs.conversation.length\n  ) {\n    return;\n  }\n\n  if (commentOnSelection) {\n    const commentNodes = DocumentHelpers.findChildrenByMark(state.doc, commentMark, true);\n\n    const allCommentsWithSameId = [];\n    commentNodes.map(node => {\n      node.node.marks.filter(mark => {\n        if (mark.type.name === 'comment' && commentOnSelection.attrs.id === mark.attrs.id) {\n          allCommentsWithSameId.push(node);\n        }\n      });\n    });\n\n    if (allCommentsWithSameId.length > 1) {\n      const minPos = minBy(allCommentsWithSameId, 'pos');\n      const maxPos = maxBy(allCommentsWithSameId, 'pos');\n\n      return {\n        from: minPos.pos,\n        to: maxPos.pos + last(allCommentsWithSameId).node.nodeSize,\n        attrs: commentOnSelection.attrs,\n        contained: commentOnSelection.contained,\n      };\n    }\n  }\n  return commentOnSelection;\n};\n\nexport default props => {\n  return new Plugin({\n    key: commentPlugin,\n    state: {\n      init: (_, state) => {\n        return { comment: getComment(state) };\n      },\n      apply(tr, prev, _, newState) {\n        const comment = getComment(newState);\n        let createDecoration;\n        if (comment) {\n          createDecoration = DecorationSet.create(newState.doc, [\n            Decoration.inline(comment.from, comment.to, {\n              class: 'active-comment',\n            }),\n          ]);\n        }\n        return {\n          comment,\n          createDecoration,\n        };\n      },\n    },\n    props: {\n      decorations: state => {\n        const commentPluginState = state && commentPlugin.getState(state);\n        return commentPluginState.createDecoration;\n      },\n      setCommentActive: state => {},\n    },\n  });\n};\n","import { Decoration, DecorationSet } from 'prosemirror-view';\nimport { Plugin } from 'prosemirror-state';\n\nconst WaxSelectionPlugin = new Plugin({\n  state: {\n    init(config, instance) {\n      return { deco: DecorationSet.empty };\n    },\n    apply(transaction, state, prevEditorState, editorState) {\n      const sel = transaction.curSelection;\n\n      // TODO fix the selection when a note is present.\n      let flag = false;\n      const difference = sel.$to.pos - sel.$from.pos;\n      editorState.doc.nodesBetween(sel.$from.pos, sel.$to.pos, (node, from) => {\n        if (node.type.name === 'footnote') flag = true;\n      });\n\n      if (sel && !flag) {\n        const decos = [\n          Decoration.inline(sel.$from.pos, sel.$to.pos, {\n            class: 'wax-selection-marker',\n          }),\n        ];\n        const deco = DecorationSet.create(editorState.doc, decos);\n        return { deco };\n      }\n\n      return state;\n    },\n  },\n  props: {\n    decorations(state) {\n      if (state && this.getState(state)) {\n        return this.getState(state).deco;\n      }\n      return null;\n    },\n  },\n});\n\nexport default WaxSelectionPlugin;\n","import hljs from 'highlight.js/lib/core';\nimport { getHighlightDecorations } from 'prosemirror-highlightjs';\nimport { DecorationSet } from 'prosemirror-view';\nimport { Plugin } from 'prosemirror-state';\n\nconst highlightPlugin = (nodeTypes = ['code_block']) => {\n  return new Plugin({\n    state: {\n      init(_, instance) {\n        const content = getHighlightDecorations(\n          instance.doc,\n          hljs,\n          nodeTypes,\n          () => undefined,\n        );\n        return DecorationSet.create(instance.doc, content);\n      },\n      apply(tr, set, state) {\n        if (!tr.docChanged) {\n          return set.map(tr.mapping, tr.doc);\n        }\n\n        const {\n          selection: { $from, $to },\n          doc,\n        } = state;\n        let codeBlock = false;\n\n        doc.nodesBetween($from.pos, $to.pos, (node, from) => {\n          if (node.type.name === 'code_block') {\n            codeBlock = true;\n          }\n        });\n\n        if (codeBlock) {\n          const content = getHighlightDecorations(\n            tr.doc,\n            hljs,\n            nodeTypes,\n            () => undefined,\n          );\n\n          return DecorationSet.create(tr.doc, content);\n        }\n        return set.map(tr.mapping, tr.doc);\n      },\n    },\n    props: {\n      decorations(state) {\n        return this.getState(state);\n      },\n    },\n  });\n};\n\nexport default highlightPlugin;\n"],"names":["deactivateAllSelectedChanges","tr","pluginState","decos","DecorationSet","empty","setMeta","key","getFromToMark","doc","pos","mark","$pos","resolve","parent","start","childAfter","parentOffset","node","startIndex","index","startPos","offset","isInSet","child","marks","nodeSize","endIndex","endPos","childCount","from","to","findSelectedChanges","state","selection","selectedChanges","insertion","deletion","formatChange","insertionPos","deletionPos","formatChangePos","insertionMark","deletionMark","formatChangeMark","insertionSize","deletionSize","formatChangeSize","resolvedPos","find","type","name","attrs","approved","nodesBetween","track","trackAttr","isInline","PluginKey","selectedInsertionSpec","selectedDeletionSpec","selectedChangeFormatSpec","options","Plugin","init","config","userIds","descendants","forEach","includes","user","push","apply","prev","oldState","meta","getMeta","getState","selectionSet","decoType","Decoration","inline","add","class","map","mapping","props","decorations","handleDOMEvents","focus","view","_event","dispatch","commentPlugin","getComment","commentMark","schema","comment","commentOnSelection","DocumentHelpers","findFragmentedMark","conversation","length","commentNodes","findChildrenByMark","allCommentsWithSameId","filter","id","minPos","minBy","maxPos","maxBy","last","contained","_","newState","createDecoration","create","commentPluginState","setCommentActive","WaxSelectionPlugin","instance","deco","transaction","prevEditorState","editorState","sel","curSelection","flag","difference","$to","$from","highlightPlugin","nodeTypes","content","getHighlightDecorations","hljs","undefined","set","docChanged","codeBlock"],"mappings":"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"}