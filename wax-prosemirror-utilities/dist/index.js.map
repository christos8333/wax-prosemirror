{"version":3,"file":"index.js","sources":["../src/schema/SchemaHelpers.js","../src/document/DocumentHelpers.js","../src/commands/Commands.js"],"sourcesContent":["const parseFormatList = str => {\n  if (!str) {\n    return [];\n  }\n  let formatList;\n  try {\n    formatList = JSON.parse(str);\n  } catch (error) {\n    return [];\n  }\n  if (!Array.isArray(formatList)) {\n    return [];\n  }\n  return formatList.filter(format => typeof format === \"string\");\n};\n\nconst parseTracks = str => {\n  if (!str) {\n    return [];\n  }\n  let tracks;\n  try {\n    tracks = JSON.parse(str);\n  } catch (error) {\n    return [];\n  }\n  if (!Array.isArray(tracks)) {\n    return [];\n  }\n  return tracks.filter(\n    (\n      track // ensure required fields are present\n    ) =>\n      track.hasOwnProperty(\"user\") &&\n      track.hasOwnProperty(\"username\") &&\n      track.hasOwnProperty(\"date\")\n  );\n};\n\nconst blockLevelToDOM = node => {\n  const attrs =\n    node.attrs.track && node.attrs.track.length\n      ? {\n          \"data-id\": node.attrs.id,\n          class: node.attrs.class,\n          \"data-track\": JSON.stringify(node.attrs.track),\n          \"data-group\": node.attrs.group\n        }\n      : { class: node.attrs.class };\n  return attrs;\n};\n\nexport default { parseFormatList, parseTracks, blockLevelToDOM };\n","const findMark = (state, PMmark, toArr = false) => {\n  const {\n    selection: { $from, $to },\n    doc,\n  } = state;\n  const fromMark = $from.marks().find(mark => mark.type === PMmark);\n  const toMark = $to.marks().find(mark => mark.type === PMmark);\n  let markFound;\n  const marksFound = [];\n  doc.nodesBetween($from.pos, $to.pos, (node, from) => {\n    if (node.marks) {\n      const actualMark = node.marks.find(mark => mark.type === PMmark);\n      if (actualMark) {\n        markFound = {\n          from,\n          to: from + node.nodeSize,\n          attrs: actualMark.attrs,\n          contained: !fromMark || !toMark || fromMark === toMark,\n        };\n        marksFound.push(markFound);\n      }\n    }\n  });\n  if (toArr) return marksFound;\n  return markFound;\n};\n\nconst getSelectionMark = (state, PMmark) => {\n  const {\n    selection: { $from, $to },\n    doc,\n  } = state;\n  let markFound;\n  doc.nodesBetween($from.pos, $to.pos, (node, from) => {\n    if (node.marks) {\n      const actualMark = node.marks.find(mark => mark.type === PMmark);\n      if (actualMark) {\n        markFound = {\n          from: $from.pos,\n          to: $to.pos,\n          attrs: actualMark.attrs,\n        };\n      }\n    }\n  });\n\n  return markFound;\n};\n\n/* this is a workaround for now to find marks\n  that are pm will break them.\n*/\nconst findFragmentedMark = (state, PMmark) => {\n  const {\n    selection: { $from, $to },\n    doc,\n  } = state;\n  const fromPos = [$from.pos - 1, $from.pos];\n  const toPos = [$to.pos - 1, $to.pos];\n  let markFound;\n\n  for (let i = 0; i < fromPos.length; i++) {\n    doc.nodesBetween(fromPos[i], toPos[i], (node, from) => {\n      if (node.marks) {\n        const actualMark = node.marks.find(mark => mark.type === PMmark);\n        if (actualMark) {\n          markFound = {\n            from,\n            to: from + node.nodeSize,\n            attrs: actualMark.attrs,\n          };\n        }\n      }\n    });\n    if (markFound) {\n      return markFound;\n    }\n  }\n  return markFound;\n};\n\nconst findAllMarksWithSameId = (state, mark) => {\n  const type = mark.type.name;\n  const markType = state.schema.marks[type];\n\n  const allNodes = findChildrenByMark(state.doc, markType, true);\n\n  const allMarksWithSameId = [];\n  allNodes.map(node => {\n    node.node.marks.filter(value => {\n      if (mark.type.name === type && mark.attrs.id === value.attrs.id) {\n        allMarksWithSameId.push(node);\n      }\n    });\n  });\n  return allMarksWithSameId;\n};\n\nconst findMarkPosition = (activeView, initialPos, markType) => {\n  const $pos = activeView.state.tr.doc.resolve(initialPos);\n  const { parent } = $pos;\n  const start = parent.childAfter($pos.parentOffset);\n  if (!start.node) return null;\n  const actualMark = start.node.marks.find(mark => mark.type.name === markType);\n  let startIndex = $pos.index();\n  let startPos = $pos.start() + start.offset;\n  while (startIndex > 0 && actualMark.isInSet(parent.child(startIndex - 1).marks))\n    startPos -= parent.child(--startIndex).nodeSize;\n  let endIndex = $pos.indexAfter();\n  let endPos = startPos + start.node.nodeSize;\n  while (endPos < parent.childCount && actualMark.isInSet(parent.child(endIndex).marks))\n    endPos += parent.child(endIndex++).nodeSize;\n  return { from: startPos, to: endPos };\n};\n\nexport const flatten = (node, descend = true) => {\n  if (!node) {\n    throw new Error('Invalid \"node\" parameter');\n  }\n  const result = [];\n  node.descendants((child, pos) => {\n    result.push({ node: child, pos });\n    if (!descend) {\n      return false;\n    }\n  });\n  return result;\n};\n\nconst findBlockNodes = (node, descend) => {\n  return findChildren(node, child => child.isBlock, descend);\n};\n\nconst findChildrenByType = (node, nodeType, descend) => {\n  return findChildren(node, child => child.type === nodeType, descend);\n};\n\nconst findChildren = (node, predicate, descend) => {\n  if (!node) {\n    throw new Error('Invalid \"node\" parameter');\n  } else if (!predicate) {\n    throw new Error('Invalid \"predicate\" parameter');\n  }\n  return flatten(node, descend).filter(child => predicate(child.node));\n};\n\nconst findInlineNodes = (node, descend) => {\n  return findChildren(node, child => child.isInline, descend);\n};\n\nconst findChildrenByMark = (node, markType, descend) => {\n  return findChildren(node, child => markType.isInSet(child.marks), descend);\n};\n\nexport const findChildrenByAttr = (node, predicate, descend) => {\n  return findChildren(node, child => !!predicate(child.attrs), descend);\n};\n\nexport default {\n  findMark,\n  findBlockNodes,\n  findChildrenByType,\n  findInlineNodes,\n  findChildrenByMark,\n  findChildrenByAttr,\n  getSelectionMark,\n  findFragmentedMark,\n  findAllMarksWithSameId,\n  findMarkPosition,\n};\n","import { v4 as uuidv4 } from 'uuid';\nimport { toggleMark } from 'prosemirror-commands';\n\nconst setBlockType = (nodeType, attrs = {}) => {\n  return (state, dispatch) => {\n    const { tr } = state;\n    const { from, to } = state.selection;\n    state.doc.nodesBetween(from, to, (node, pos) => {\n      if (!node.isTextblock || node.hasMarkup(nodeType, attrs)) return;\n      let applicable = false;\n      if (node.type === nodeType) {\n        applicable = true;\n      } else {\n        const $pos = state.doc.resolve(pos);\n        const index = $pos.index();\n        applicable = $pos.parent.canReplaceWith(index, index + 1, nodeType);\n      }\n      if (applicable) {\n        tr.setBlockType(\n          from,\n          to,\n          nodeType,\n          Object.assign({}, node.attrs, attrs),\n        );\n      }\n    });\n    if (!tr.steps.length) return false;\n    if (dispatch) dispatch(tr.scrollIntoView());\n    return true;\n  };\n};\n\nconst markActive = type => state => {\n  const { from, $from, to, empty } = state.selection;\n\n  return empty\n    ? type.isInSet(state.storedMarks || $from.marks())\n    : state.doc.rangeHasMark(from, to, type);\n};\n\nconst blockActive = (type, attrs = {}) => state => {\n  const { $from, to, node } = state.selection;\n\n  if (node) {\n    return node.hasMarkup(type, attrs);\n  }\n\n  return to <= $from.end() && $from.parent.hasMarkup(type, attrs);\n};\n\nconst canInsert = type => state => {\n  const { $from } = state.selection;\n\n  for (let d = $from.depth; d >= 0; d--) {\n    const index = $from.index(d);\n\n    if ($from.node(d).canReplaceWith(index, index, type)) {\n      return true;\n    }\n  }\n\n  return false;\n};\n\nconst createTable = (state, dispatch) => {\n  let rowCount = window && window.prompt('How many rows?', 2);\n  let colCount = window && window.prompt('How many columns?', 2);\n\n  const cells = [];\n  while (colCount--) {\n    cells.push(state.config.schema.nodes.table_cell.createAndFill());\n  }\n\n  const rows = [];\n  while (rowCount--) {\n    rows.push(state.config.schema.nodes.table_row.createAndFill(null, cells));\n  }\n\n  const table = state.config.schema.nodes.table.createAndFill(null, rows);\n  dispatch(state.tr.replaceSelectionWith(table));\n};\n\nconst createLink = (state, dispatch) => {\n  const {\n    selection: { $from, $to },\n  } = state;\n  dispatch(\n    state.tr\n      .setMeta('addToHistory', false)\n      .addMark(\n        $from.pos,\n        $to.pos,\n        state.schema.marks.link.create({ href: '' }),\n      ),\n  );\n};\n\nconst isOnSameTextBlock = state => {\n  const {\n    selection: { $from, $to, from, to },\n  } = state;\n  if (from !== to && $from.parent === $to.parent && $from.parent.isTextblock) {\n    return true;\n  }\n  return false;\n};\n\nconst createComment = (state, dispatch, group, viewid) => {\n  toggleMark(state.config.schema.marks.comment, {\n    id: uuidv4(),\n    group,\n    conversation: [],\n    viewid,\n  })(state, dispatch);\n};\n\nexport default {\n  setBlockType,\n  blockActive,\n  canInsert,\n  createComment,\n  createLink,\n  createTable,\n  markActive,\n  isOnSameTextBlock,\n};\n"],"names":["parseFormatList","str","formatList","JSON","parse","error","Array","isArray","filter","format","parseTracks","tracks","track","hasOwnProperty","blockLevelToDOM","node","attrs","length","id","class","stringify","group","findMark","state","PMmark","toArr","selection","$from","$to","doc","fromMark","marks","find","mark","type","toMark","markFound","marksFound","nodesBetween","pos","from","actualMark","to","nodeSize","contained","push","getSelectionMark","findFragmentedMark","fromPos","toPos","i","findAllMarksWithSameId","name","markType","schema","allNodes","findChildrenByMark","allMarksWithSameId","map","value","findMarkPosition","activeView","initialPos","$pos","tr","resolve","parent","start","childAfter","parentOffset","startIndex","index","startPos","offset","isInSet","child","endIndex","indexAfter","endPos","childCount","flatten","descend","Error","result","descendants","findBlockNodes","findChildren","isBlock","findChildrenByType","nodeType","predicate","findInlineNodes","isInline","findChildrenByAttr","setBlockType","dispatch","isTextblock","hasMarkup","applicable","canReplaceWith","Object","assign","steps","scrollIntoView","markActive","empty","storedMarks","rangeHasMark","blockActive","end","canInsert","d","depth","createTable","rowCount","window","prompt","colCount","cells","config","nodes","table_cell","createAndFill","rows","table_row","table","replaceSelectionWith","createLink","setMeta","addMark","link","create","href","isOnSameTextBlock","createComment","viewid","toggleMark","comment","uuidv4","conversation"],"mappings":"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"}